% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KLchecker.R
\name{EstimateKL}
\alias{EstimateKL}
\title{Function to calculate expected KL}
\usage{
EstimateKL(simulator.true.model, true.parameters,
  param.estimator.candidate.model, simulator.candidate.model,
  likelihood.data.with.true.model, likelihoods.data.with.candidate.model, K,
  nrep.outer = 100, nrep.inner = 100)
}
\arguments{
\item{simulator.true.model}{Function to create a dataset given vector of true parameters}

\item{true.parameters}{Vector of parameters to use for simulations}

\item{param.estimator.candidate.model}{Function to estimate the parameters under a candidate model given an input dataset}

\item{simulator.candidate.model}{Function to simulate a dataset given vector of estimated parameters}

\item{likelihood.data.with.true.model}{Function to calculate the log likelihood (not neg log like) of the data under the true model}

\item{likelihoods.data.with.candidate.model}{Function to calculate the log likelihood (not neg log like) of the data under the candidate model}

\item{K}{Number of free parameters in candidate model}

\item{nrep.outer}{Number of outer loops}

\item{nrep.inner}{Number of inner loops}
}
\value{
KL in same space (so multiplied by -2) as AIC
}
\description{
Based on Jhwueng et al. 2014, especially equation 7
}
\examples{
simulator.true.model <- function(parameters) {
  return(rnorm(n=1000, mean=parameters[1], sd=parameters[2]))
}

true.parameters <- c(1000, 0.12)

param.estimator.candidate.model <- function(x) {
  return(mean(1/x)) #here our candidate is exp
}

simulator.candidate.model <- function(parameters) {
  return(rexp(n=1000, rate=parameters[1]))
}

likelihood.data.with.true.model <- function(data, parameters) {
  return(sum(dnorm(data, mean=parameters[1], sd=parameters[2]), log=TRUE))
}

likelihood.data.with.candidate.model <- function(data) {
  return(sum(dexp(data, rate=param.estimator.candidate.model(data)), log=TRUE))
}

K <- 1

NormVsExp <- EstimateKL(simulator.true.model, true.parameters, param.estimator.candidate.model, simulator.candidate.model, likelihood.data.with.true.model, likelihoods.data.with.candidate.model, K)


simulator.true.model <- function(parameters) {
  return(rnorm(n=1000, mean=parameters[1], sd=parameters[2]))
}

true.parameters <- c(1000, 0.12)

param.estimator.candidate.model <- function(x) {
  return(c(mean(x), sd(x))) #here our candidate is exp
}

simulator.candidate.model <- function(parameters) {
  return(rnorm(n=1000, mean=parameters[1], sd=parameters[2]))
}

likelihood.data.with.true.model <- function(data, parameters) {
  return(sum(dnorm(data, mean=parameters[1], sd=parameters[2]), log=TRUE))
}

likelihood.data.with.candidate.model <- function(data) {
  return(sum(dnorm(data, mean=mean(data), sd=sd(data)), log=TRUE))
}

K <- 2

NormVsNorm <- EstimateKL(simulator.true.model, true.parameters, param.estimator.candidate.model, simulator.candidate.model, likelihood.data.with.true.model, likelihoods.data.with.candidate.model, K)
}
